/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.imbochfckyeahprojects.finalproject;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author imbochfuckyeah
 */
public class loadusers extends javax.swing.JFrame {
    
    /**
     * Creates new form loadusers
     */
    public loadusers() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        divclass = new javax.swing.JPanel();
        jtitle = new javax.swing.JLabel();
        jsubtitle = new javax.swing.JLabel();
        jbackmenu = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        datausers = new javax.swing.JTable();
        btload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setBackground(new java.awt.Color(0, 153, 204));
        background.setForeground(new java.awt.Color(0, 153, 204));

        divclass.setBackground(new java.awt.Color(255, 255, 255));

        jtitle.setFont(new java.awt.Font("Montserrat", 1, 36)); // NOI18N
        jtitle.setForeground(new java.awt.Color(102, 102, 102));
        jtitle.setText("Load files");

        jsubtitle.setFont(new java.awt.Font("Comfortaa", 0, 14)); // NOI18N
        jsubtitle.setForeground(new java.awt.Color(0, 153, 204));
        jsubtitle.setText("Here you can check all the data about the users or tickets.");

        jbackmenu.setFont(new java.awt.Font("Comfortaa", 0, 10)); // NOI18N
        jbackmenu.setForeground(new java.awt.Color(102, 102, 102));
        jbackmenu.setText("Back to menu");
        jbackmenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbackmenuMouseClicked(evt);
            }
        });

        datausers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(datausers);

        btload.setBackground(new java.awt.Color(0, 153, 204));
        btload.setFont(new java.awt.Font("Montserrat", 1, 15)); // NOI18N
        btload.setForeground(new java.awt.Color(255, 255, 255));
        btload.setText("Load file");
        btload.setBorder(null);
        btload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout divclassLayout = new javax.swing.GroupLayout(divclass);
        divclass.setLayout(divclassLayout);
        divclassLayout.setHorizontalGroup(
            divclassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(divclassLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(divclassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                    .addGroup(divclassLayout.createSequentialGroup()
                        .addComponent(jtitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbackmenu))
                    .addGroup(divclassLayout.createSequentialGroup()
                        .addComponent(jsubtitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        divclassLayout.setVerticalGroup(
            divclassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, divclassLayout.createSequentialGroup()
                .addGroup(divclassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(divclassLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(divclassLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbackmenu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsubtitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btload, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(divclass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(divclass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbackmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbackmenuMouseClicked
        // TODO add your handling code here:
        menuadmin m = new menuadmin();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbackmenuMouseClicked

    private void btloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btloadActionPerformed
        // TODO add your handling code here:
        JFileChooser selectfile = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Files csv or xml or json", "csv","xml", "json");
        selectfile.setFileFilter(filter);

        int select = selectfile.showOpenDialog(this);

        if(select == JFileChooser.APPROVE_OPTION){
            File file = selectfile.getSelectedFile();
            validateExtension(file);
        }else{
            JOptionPane.showMessageDialog(this, "File extension error!, try again.");
        }
    }//GEN-LAST:event_btloadActionPerformed

    public void validateExtension(File file) {
        String ext = null;
        String s = file.getName();
        int i = s.lastIndexOf('.');

        if (i > 0 &&  i < s.length() - 1) {
            ext = s.substring(i+1).toLowerCase();
            
            if(ext.equals("csv")){
                 //clean jtable
                cleaddatatable();
                loadfilecsv(file);
            }else if(ext.equals("xml")){
                 //clean jtable
                cleaddatatable();
                loadfilexml(file);
            }
            else if(ext.equals("json")){
                 //clean jtable
                cleaddatatable();
                loadfilejson(file);
            }else{
                JOptionPane.showMessageDialog(this, "Format file incorrect");
            }
        }
    }

    public void loadfilecsv(File file){
        FileReader fr = null;
        BufferedReader br = null;
        try{
            fr = new FileReader(file);
            br = new BufferedReader(fr);
            
            String line;
            while((line = br.readLine())!=null){
                String arreglo [] = line.split(",");
                if(arreglo.length==6){
                    newusers user = new newusers();
                    user.setName(arreglo[0]);
                    user.setLastname(arreglo[1]);
                    user.setEmail(arreglo[2]);
                    user.setUser(arreglo[3]);
                    user.setPassword(arreglo[4]);
                    user.setRol(arreglo[5]);
                    masterclass.users.add(user);
                }
            }
            setdatatablecsv();
        }catch (Exception ex){
            ex.printStackTrace();
        }finally{
            try{
                if(fr != null){
                    fr.close();
                }
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }
    
    private void loadfilexml(File file){
        try{
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dbBuilder = dbFactory.newDocumentBuilder();
            Document doc = dbBuilder.parse(file);
            doc.getDocumentElement().normalize();
            
            NodeList nList = doc.getElementsByTagName("miembro");
            for(int i=0; i<nList.getLength();i++){
                Node nNode  = nList.item(i);
                if(nNode.getNodeType() == Node.ELEMENT_NODE){
                    Element e = (Element) nNode;
                    newusers user = new newusers();
                    user.setName(e.getElementsByTagName("nombre").item(0).getTextContent());
                    user.setLastname(e.getElementsByTagName("apellido").item(0).getTextContent());
                    user.setUser(e.getElementsByTagName("usuario").item(0).getTextContent());
                    user.setEmail(e.getElementsByTagName("correo").item(0).getTextContent());
                    user.setPassword(e.getElementsByTagName("password").item(0).getTextContent());
                    user.setDepartament(e.getElementsByTagName("departamento").item(0).getTextContent());
                    user.setRol(e.getElementsByTagName("rol").item(0).getTextContent());
                    masterclass.users.add(user);
                }
            }
            setdatatablexml();
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    private void loadfilejson(File file){
        JSONParser jsonParser = new JSONParser();
        
        try(FileReader reader = new FileReader(file)){
            Object obj = jsonParser.parse(reader);
            JSONArray ticketlist = (JSONArray) obj;
            for(Object ticket : ticketlist){
                System.out.println(ticket);
                setdatatablejson((JSONObject) ticket);
            }
        }catch(FileNotFoundException e){
        e.printStackTrace();
        }catch(IOException e){
        e.printStackTrace();
        }catch(ParseException e){
        e.printStackTrace();
        }
    }
    
    private static void setdatatablejson(JSONObject jsonObject){
            /*
            DefaultTableModel data = new DefaultTableModel(new String[]{"Name", "Lastname", "Email", "User", "Password", "Departament"}, masterclass.users.size());
            datausers.setModel(data);

            TableModel model = datausers.getModel();

            for (int i = 0; i < masterclass.users.size(); i++) {
                newusers datau = masterclass.users.get(i);
                model.setValueAt(datau.getName(), i, 0);
                model.setValueAt(datau.getLastname(), i, 1);
                model.setValueAt(datau.getEmail(), i, 2);
                model.setValueAt(datau.getUser(), i, 3);
                model.setValueAt(datau.getPassword(), i, 4);
                model.setValueAt(datau.getDepartament(), i, 5);
            }*/
    }
    
    private void setdatatablecsv(){

            DefaultTableModel data = new DefaultTableModel(new String[]{"Name", "Lastname", "Email", "User", "Password", "Rol"}, masterclass.users.size());
            datausers.setModel(data);

            TableModel model = datausers.getModel();

            for (int i = 0; i < masterclass.users.size(); i++) {
                newusers datau = masterclass.users.get(i);
                model.setValueAt(datau.getName(), i, 0);
                model.setValueAt(datau.getLastname(), i, 1);
                model.setValueAt(datau.getEmail(), i, 2);
                model.setValueAt(datau.getUser(), i, 3);
                model.setValueAt(datau.getPassword(), i, 4);
                model.setValueAt(datau.getRol(), i, 5);
            }
    }
    
    private void setdatatablexml(){
            
            DefaultTableModel data = new DefaultTableModel(new String[]{"Name", "Lastname", "Email", "User", "Password", "Departament"}, masterclass.users.size());
            datausers.setModel(data);

            TableModel model = datausers.getModel();

            for (int i = 0; i < masterclass.users.size(); i++) {
                newusers datau = masterclass.users.get(i);
                model.setValueAt(datau.getName(), i, 0);
                model.setValueAt(datau.getLastname(), i, 1);
                model.setValueAt(datau.getEmail(), i, 2);
                model.setValueAt(datau.getUser(), i, 3);
                model.setValueAt(datau.getPassword(), i, 4);
                model.setValueAt(datau.getDepartament(), i, 5);
            }
    }
    
    private void cleaddatatable(){
        datausers.setModel(new DefaultTableModel(null, new String[]{"Title 1","Title 2", "Title 3", "Title 4"}));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton btload;
    private javax.swing.JTable datausers;
    private javax.swing.JPanel divclass;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jbackmenu;
    private javax.swing.JLabel jsubtitle;
    private javax.swing.JLabel jtitle;
    // End of variables declaration//GEN-END:variables
}
